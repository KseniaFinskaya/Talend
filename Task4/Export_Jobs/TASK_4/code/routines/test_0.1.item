package routines;

import java.io.UnsupportedEncodingException;

import org.apache.commons.codec.binary.Base64;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class Encoder {

    /**
     * encodeString: encode string to Base64.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string("world") input: The string need to be encoded.
     * 
     * {example} helloExemple("world") # base64 of world.
     * @throws UnsupportedEncodingException 
     */
    public static byte [] encodeString(String message) throws UnsupportedEncodingException {
    	byte [] bytes = message.getBytes("UTF-8");
    	byte [] encodedBytes = Base64.encodeBase64(bytes);
        return encodedBytes;
    }
}
